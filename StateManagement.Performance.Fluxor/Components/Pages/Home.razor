@page "/"

@using StateManagement.Performance.Fluxor.Store.ContentUseCase
@using StateManagement.Performance.Models
@using StateManagement.Performance.Models.Services
@using StateManagement.Performance.Shared
@using System.Diagnostics

@inject ILoadDataService LoadDataService
@inject IState<ContentState> ContentState
@inject IDispatcher Dispatcher

@inherits FluxorComponent

<Content Bodies="ContentState.Value.Bodies" TimeSpan="_timeSpan" OnSetDataInState="SetDataInState"></Content>

@code {
    private IEnumerable<BodyModel>? _bodies;
    private TimeSpan _timeSpan;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (!ContentState.Value.Bodies.Any())
        {
            _bodies = LoadDataService.LoadData();
        }
    }
    private void SetDataInState()
    {
        if (_bodies != null)
        {
            var stopwatch = new Stopwatch();

            stopwatch.Start();

            Dispatcher.Dispatch(ContentAction.SetBodies(_bodies));

            stopwatch.Stop();

            _timeSpan = stopwatch.Elapsed;
        }
    }
}